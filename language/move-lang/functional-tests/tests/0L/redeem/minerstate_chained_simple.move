//! account: dummy-prevents-genesis-reload, 100000 ,0, validator
//! account: alice, 10000000GAS

//! new-transaction
//! sender: alice
script {
use 0x0::MinerState;
// use 0x0::Debug;
use 0x0::Transaction;

fun main(sender: &signer) {
    let difficulty = 100;

    // Generate solutions with cd ./verfiable-delay/ cargo run -- -l=4096 aa 100
    // the -l=4096 is important because this is the security paramater of 0L miner.
    let challenge = x"058e1a675fd08760a9343e18df7180bd118be4c2e95eb744266ee9f51ca435a4";

    let solution = x"003daba1d8e989f72ce1d3286b87e9648007834ebd316d3187efc83b14fe0b86518cd9db179bc714772e1dee6cfa93c34be3b267b2421e96c0af8b36b4a51727c7cd516dc12758f7ff46225cef56b7e85c5a5f2737a1d277415380ce0254863f22471bc5ebca7cb5b09072d66e814c6393ecabc035a8242892e3fb9f609b23613d0ac251ba09119dd2b46193ea5d6ae0c781f09edac542e33b829d867ac6fa8faf66f82ae5302d2fe5806bf782dfcbf5bfc0061cfe0d2c79796e1068738b420eaeeeaff32d04a9878d6e7586eeaf6831be1f88303ded8a7414b971f24e41604666f02670bdf693b99efc0568c22029657dba6073473d65b687a2b601d2abb49514000db929f44fdc0185df5c9f5444fb6f504a64e40fe040bb49020007d8ec53bcf35266bdc04eb5935100d7eb724fcb547eff0f5c2fd9bbfb41ff829a14ff1bb7225d49fc6808e0629a8d047d91c24c9cfa80096d58d0060d20512ff7b524751b133741897d22c7368be7dde57d3e17c1045d2b9af536b791d285c6038e0288daad399d29a3bf3e58ccc6bb9bfbeafb51be11cd58d319a252d767e52ef5315616f99cc4a5910fb0e9bacc5f98863ac5a4acdb987dfa15e272b8c1f4151b0fc8960caf2ff0b00ca6c6e32ca8ceb0596a89a3ce13a55b88650c1f660ca0429c7c391d1d02e48e86d53cabb6e1805ccdb95403a58ac118e407a71be2ec146e09d09e6b
    let reported_tower_height = 0;

    // return solution
    let proof = MinerState::create_proof_blob(challenge, difficulty, solution, reported_tower_height);
    MinerState::commit_state(sender, proof);
    let verified_tower_height_after = MinerState::get_miner_tower_height({{alice}});
    // Debug::print(&verified_tower_height_after);

    Transaction::assert(verified_tower_height_after == reported_tower_height, 10008001);


}
}
// check: EXECUTED
